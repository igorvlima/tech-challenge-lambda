name: Deploy Infra and Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan -input=false \
            -var="user_pool_id=${{ secrets.COGNITO_USER_POOL_ID }}" \
            -var="client_id=${{ secrets.COGNITO_CLIENT_ID }}" \
            -var="default_pass=${{ secrets.DEFAULT_PASS }}"


      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Capture Terraform Outputs
        id: tf_outputs
        run: |
          echo "USER_POOL_ID=$(terraform output -raw user_pool_id)" >> $GITHUB_ENV
          echo "USER_POOL_CLIENT_ID=$(terraform output -raw user_pool_client_id)" >> $GITHUB_ENV

      - name: Deploy Lambda
        env:
          USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
          USER_POOL_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
          COGNITO_DUMMY_PASSWORD: ${{ secrets.DEFAULT_PASS }}
        run: |
          echo "Deploying Lambda..."
          echo "Using USER_POOL_ID=$USER_POOL_ID"
          echo "Using USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID"
          # Aqui vocÃª pode rodar o deploy da lambda, exemplo usando AWS CLI:
          aws lambda update-function-configuration \
            --function-name minha-lambda \
            --environment "Variables={USER_POOL_ID=$USER_POOL_ID,USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID,COGNITO_DUMMY_PASSWORD=$COGNITO_DUMMY_PASSWORD}"
